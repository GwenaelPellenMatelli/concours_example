<?php
/**
 * @file
 * Install for a concours entity - need to create the base table for our entity.
 */

/**
 * Implements hook_schema().
 *
 * @ingroup concours_example
 */
function concours_example_schema() {
  $schema = array();

  // The name of the table can be any name we choose. However, namespacing the
  // table with the module name is best practice.
  $schema['concours_example_concour'] = array(
    'description' => 'The base table for our concour entity.',
    'fields' => array(
      'concour_id' => array(
        'description' => 'Primary key of the concour entity.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      // If we allow multiple bundles, then the schema must handle that;
      // We'll put it in the 'bundle_type' field to avoid confusion with the
      // entity type.
      'bundle_type' => array(
        'description' => 'The bundle type',
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      // Additional properties are just things that are common to all
      // entities and don't require field storage.
      'item_description' => array(
        'description' => 'A description of the item',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp of the entity creation time.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('concour_id'),
  );
  return $schema;
}


/**
 * Implements hook_uninstall().
 *
 * At uninstall time we'll notify field.module that the entity was deleted
 * so that attached fields can be cleaned up.
 *
 * @ingroup entity_example
 */
function entity_example_uninstall() {
  field_attach_delete_bundle('concours_example_concour', 'first_example_bundle');
}

